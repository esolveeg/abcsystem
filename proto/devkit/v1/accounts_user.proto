syntax = "proto3";

package devkit.v1;

import "buf/validate/validate.proto";
import "devkit/v1/client.proto";
message UserCreateUpdateRequest {
  int32 user_id = 1; // User's ID, should be unique
  string user_name = 2 [
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 200
  ]; // User's name with validation

  string user_image= 12 [
    (buf.validate.field).string.max_len = 200
  ]; 
  int32 tenant_id = 9;
  int32 user_security_level = 3; // Security level of the user (non-nullable in DB)
  int32 user_type_id = 4 [(buf.validate.field).int32.gt = 0]; // Foreign key for the user type (validated for presence)
  string user_phone = 5 [(buf.validate.field).string.max_len = 50];
  string user_email = 6 [
    (buf.validate.field).string.email = true,
    (buf.validate.field).string.max_len = 200
  ]; // Email, validated and unique

  string user_password = 7 [(buf.validate.field).string.max_len = 200]; // Password, requires length validation
  repeated int32 roles = 8 [(buf.validate.field).repeated = {
    unique: true
    max_items: 500
  }];
}
message AccountsSchemaUser {
  int32 user_id = 1;
  string user_name = 2; 
  string user_image= 22; 
  int32 tenant_id = 12;
  int32 user_security_level = 3; 
  int32 user_type_id = 4; 
  string user_phone = 5; 
  string user_email = 6; 
  string user_password = 7; 
  string created_at = 9; 
  string updated_at = 10; 
  string deleted_at = 11; 
}
message UserRole {
  int32 user_id = 1;
  int32 role_id = 2;
  string role_name= 3;
}
message AccountsSchemaUserView {
  int32 user_id         = 1; 
  string user_name      = 2; 
  string user_image = 22;
  int32 user_security_level = 23; 
  string user_email     = 3; 
  string user_phone     = 4; 
  int32 user_type_id    = 5;
  string user_type_name = 6;
  int32 tenant_id       = 7;
  string tenant_name    = 8;
  string created_at    = 9;
  string updated_at = 10;
  string deleted_at = 11;
  repeated UserRole roles  = 12;  // nested array of Role
}

message UserCreateUpdateResponse {
  AccountsSchemaUser user = 1;
}
message UserDeleteRestoreRequest {
  repeated int32 records = 1;
}
message UserDeleteRestoreResponse {
  repeated AccountsSchemaUser records = 1;
}

message UserDeleteRequest {
  repeated int32 records = 1;
}
message UserDeleteResponse {
  repeated AccountsSchemaUser records = 1;
}
message UserListRow {
  int32 user_id         = 1; 
  string user_name      = 2; 
  string user_image = 22;
  int32 user_security_level = 23; 
  string user_email     = 3; 
  string user_phone     = 4; 
  int32 user_type_id    = 5;
  string user_type_name = 6;
  int32 tenant_id       = 7;
  string tenant_name    = 8;
  string created_at    = 9;
  string updated_at = 10;
  string deleted_at = 11;
  repeated int32 role_ids = 12;
  repeated UserRole roles  = 13;  // nested array of Role
}
message UserListRequest {}
message UserListResponse {
  repeated UserListRow  records = 1;
  repeated UserListRow deleted_records = 2;
  AvailableOptions options = 3;
}
message UserListInputRequest {}
message UserListInputResponse {
  repeated SelectInputOption options = 1;
}
message UserTypeListInputRequest {}
message UserTypeListInputResponse {
  repeated SelectInputOption options = 1;
}

message UserFindForUpdateRequest {
  int32 record_id = 1;
}
message UserFindForUpdateResponse {
  UserCreateUpdateRequest request = 1;
}

message UserFindRequest {
  int32 record_id = 1;
}
message UserFindResponse {
  AvailableOptions options = 3;
  AccountsSchemaUserView  record = 1;
}

message UserPermissionListInputRequest {
}
message UserPermissionListInputResponse {
  repeated SelectInputOptionWithGroup   options  = 1;
}

